/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.vinni.result4dos.grafica;

import co.vinni.result4dos.dao.OperacionesEquipo;
import co.vinni.result4dos.dto.Equipo;
import co.vinni.result4dos.util.Utilidades;
import java.awt.Color;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vinni
 */
public class VentanaEquipos extends javax.swing.JFrame {

    /**
     * Creates new form GestionEquipos
     */
    private List<Equipo> listadoEquipos;
    
    public VentanaEquipos() {
        initComponents();
        this.setTitle("Equipos para competir  ..!!");
        cargarEquipos();
        this.btEditar.setVisible(false);
        this.cjId.setVisible(false);
        this.pCrear.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        pCrear = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cjNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cjEntrenador = new javax.swing.JTextField();
        cjId = new javax.swing.JTextField();
        btEditar = new javax.swing.JButton();
        btCrear = new javax.swing.JButton();
        lTitulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbEquipos = new javax.swing.JTable();
        btBorrar = new javax.swing.JButton();
        btNuevoE = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jButton1.setBackground(new java.awt.Color(102, 102, 102));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 51));
        jButton1.setText("<-- Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(460, 290, 90, 23);

        pCrear.setBackground(new java.awt.Color(154, 168, 191));
        pCrear.setLayout(null);

        jLabel1.setText("Nombre del equipo: ");
        pCrear.add(jLabel1);
        jLabel1.setBounds(40, 30, 140, 14);
        pCrear.add(cjNombre);
        cjNombre.setBounds(170, 30, 170, 20);

        jLabel2.setText("Nombre del entrenador");
        pCrear.add(jLabel2);
        jLabel2.setBounds(40, 60, 120, 14);
        pCrear.add(cjEntrenador);
        cjEntrenador.setBounds(170, 60, 170, 20);
        pCrear.add(cjId);
        cjId.setBounds(400, 30, 40, 20);

        btEditar.setText("Actualizar");
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });
        pCrear.add(btEditar);
        btEditar.setBounds(360, 60, 80, 23);

        btCrear.setText("Crear");
        btCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCrearActionPerformed(evt);
            }
        });
        pCrear.add(btCrear);
        btCrear.setBounds(360, 60, 80, 23);

        lTitulo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lTitulo.setText("titulo");
        pCrear.add(lTitulo);
        lTitulo.setBounds(20, 10, 290, 15);

        getContentPane().add(pCrear);
        pCrear.setBounds(20, 180, 470, 90);

        tbEquipos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbEquiposMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbEquipos);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 40, 470, 110);

        btBorrar.setText("Borrar equipo seleccionado");
        btBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBorrarActionPerformed(evt);
            }
        });
        getContentPane().add(btBorrar);
        btBorrar.setBounds(310, 150, 180, 23);

        btNuevoE.setText("Nuevo Equipo");
        btNuevoE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNuevoEActionPerformed(evt);
            }
        });
        getContentPane().add(btNuevoE);
        btNuevoE.setBounds(20, 150, 130, 23);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("LISTADO DE EQUIPOS");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(150, 20, 190, 14);

        setSize(new java.awt.Dimension(583, 368));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCrearActionPerformed
        // TODO add your handling code here:
        this.crear();
    }//GEN-LAST:event_btCrearActionPerformed

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        // TODO add your handling code here:
        this.editar();
    }//GEN-LAST:event_btEditarActionPerformed

    private void btBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBorrarActionPerformed
        // TODO add your handling code here:
        this.borrar();
    }//GEN-LAST:event_btBorrarActionPerformed

    private void tbEquiposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbEquiposMouseClicked
        // TODO add your handling code here:
        this.cambiovalor();
    }//GEN-LAST:event_tbEquiposMouseClicked

    private void btNuevoEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNuevoEActionPerformed
        // TODO add your handling code here:
        this.nuevoequipo();
    }//GEN-LAST:event_btNuevoEActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main1(String args[]) {

                try {

            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
        } catch (UnsupportedLookAndFeelException | ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaEquipos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBorrar;
    private javax.swing.JButton btCrear;
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btNuevoE;
    private javax.swing.JTextField cjEntrenador;
    private javax.swing.JTextField cjId;
    private javax.swing.JTextField cjNombre;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lTitulo;
    private javax.swing.JPanel pCrear;
    private javax.swing.JTable tbEquipos;
    // End of variables declaration//GEN-END:variables

    private void crear() {
        if (this.cjNombre.getText().isEmpty() || this.cjEntrenador.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "El nombre del equipo o del entrenador esta vació. ¡Verifique!", "Información", JOptionPane.WARNING_MESSAGE);
            return ;
        }
        OperacionesEquipo oper = new OperacionesEquipo();
        Equipo e = new Equipo();
        e.setNombre(this.cjNombre.getText().toUpperCase());
        e.setEntrenador(this.cjEntrenador.getText().toUpperCase());
        int x = oper.crear(e);
        if (x >0){
            mensajeOK("Se creó el equipo "+this.cjNombre.getText());
            cargarEquipos();
            return ;
        }else{
            mensajeWarning("No se creó el equipo, verifique e intente de nuevo. ");
        }
            
    }
    private void mensajeOK(String mensaje){
        JOptionPane.showMessageDialog(this, mensaje, "Información", JOptionPane.INFORMATION_MESSAGE);
    }
    private void mensajeWarning(String mensaje){
        JOptionPane.showMessageDialog(this, mensaje, "Información", JOptionPane.WARNING_MESSAGE);
    }

    private void cargarEquipos() {
        OperacionesEquipo oper = new OperacionesEquipo();
        this.listadoEquipos = oper.consultarAll();
        DefaultTableModel modelo = new DefaultTableModel();
        String[] columnas = {"ID", "NOMBRE", "ENTRENADOR"};

        modelo.setColumnIdentifiers(columnas);
        
        for (int i = 0; i < listadoEquipos.size(); i++) {
            Equipo equipo = listadoEquipos.get(i);
            Object [] fila = new Object[3];
            fila[0] = equipo.getId();
            fila[1] = equipo.getNombre();
            fila[2] = equipo.getEntrenador();
             modelo.addRow(fila);
        }
        
        tbEquipos.setModel(modelo);
        //modelo.fireTableDataChanged();
        
        
    }

    private void editar() {
        int index = tbEquipos.getSelectedRow();
        OperacionesEquipo oper = new OperacionesEquipo();
        Equipo e = new Equipo();
        e.setId(Utilidades.convertirNumeroL(this.cjId.getText()));
        e.setNombre(this.cjNombre.getText());
        e.setEntrenador(this.cjEntrenador.getText());
        
        int x = oper.editar(e);
        if (x >0){
            mensajeOK("Se cambio la información del equipo "+this.cjNombre.getText());
            cargarEquipos();
            return ;
        }else{
            mensajeWarning("No se actualizó la información del equipo, verifique e intente de nuevo. ");
        }
        
        
    }
    private void borrar() {
        int indice = tbEquipos.getSelectedRow();
        if (indice < 0){
            this.mensajeWarning("Seleccione el equipo que desea borrar. ");
            return ;
        }
        String[] optiones = {"Si", "No"};
        int rta = JOptionPane.showOptionDialog(null, "¿Desea borrar el equipo ?", "Información", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, optiones, optiones[1]);
         if (rta == 0) {
             
             String id = tbEquipos.getValueAt(indice, 0).toString();
             OperacionesEquipo oper = new OperacionesEquipo();
             Equipo e = new Equipo();
             e.setId(new Long(id));
             int rta1 = oper.borrar(e);
             if (rta1 > 0 ){
                 this.mensajeOK("Se borró el equipo exitosamente.");
                 cargarEquipos();
             }else{
                 this.mensajeWarning("No se borró el equipo, existen partidos asociados. ¡Verifique!");
             }
             
         } 
        
    }

    private void cambiovalor() {
        this.lTitulo.setText("Modifique la información del equipo. ");
        this.cjId.setText(tbEquipos.getValueAt(tbEquipos.getSelectedRow(), 0).toString());
        this.cjNombre.setText(tbEquipos.getValueAt(tbEquipos.getSelectedRow(), 1).toString());
        this.cjEntrenador.setText(tbEquipos.getValueAt(tbEquipos.getSelectedRow(), 2).toString());
        this.pCrear.setVisible(true);
        this.btEditar.setVisible(true);
        this.btCrear.setVisible(false);
        this.pCrear.setBackground(new Color(190, 190, 190));
        
    }

    private void nuevoequipo() {
        this.lTitulo.setText("Diligencie la información del nuevo equipo. ");
        this.btCrear.setVisible(true);
        this.btEditar.setVisible(false);
        this.pCrear.setVisible(true);
        this.limpiar();
        this.pCrear.setBackground(new Color(154, 168, 191));
    }

    private void limpiar() {
        this.cjId.setText("");
        this.cjNombre.setText("");
        this.cjEntrenador.setText("");
    }
}
